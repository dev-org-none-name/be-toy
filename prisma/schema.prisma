generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum Role {
  USER
  Recruiter
}

enum State {
  STANDBY
  FAILURE
  ACCEPT
}

model User {
  role     Role     @default(USER)
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  email    String   @unique
  phone    BigInt
  avatar   String?
  // Link
  skills   Skill[]
  process  Job[]    @relation("process")
  favs     Job[]    @relation("favs")
  company  Company?
  // Reference
  Resume   Resume[]
}

model Skill {
  id     Int    @id @default(autoincrement())
  skill  String @unique
  // Reference
  userId Int?
  jobId  Int?
  user   User?  @relation(fields: [userId], references: [id])
  Job    Job?   @relation(fields: [jobId], references: [id])
}

// ---------------------

model Company {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String  @db.MediumText
  // Link
  Photo       Photo[]
  // Reference
  userId      Int     @unique
  user        User    @relation(fields: [userId], references: [id])
}

model Photo {
  id        Int     @id @default(autoincrement())
  url       String
  // Reference
  companyId Int
  company   Company @relation(fields: [companyId], references: [id])
}

// ---------------------

model Job {
  id          Int        @id @default(autoincrement())
  title       String
  description String     @db.MediumText
  address     String
  createdAt   DateTime   @default(now())
  deadlineAt  DateTime?
  // Link
  jobPhoto    JobPhoto[]
  tag         Tag[]
  skills      Skill[]
  resume      Resume[]
  // Reference
  processId   Int?
  favsId      Int?
  process     User?      @relation("process", fields: [processId], references: [id])
  favs        User?      @relation("favs", fields: [favsId], references: [id])
}

model Resume {
  id     Int   @id @default(autoincrement())
  state  State @default(STANDBY)
  // Reference
  job    Job?  @relation(fields: [jobId], references: [id])
  jobId  Int
  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model JobPhoto {
  id    Int    @id @default(autoincrement())
  url   String
  // Reference
  jobId Int?
  job   Job?   @relation(fields: [jobId], references: [id])
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  // Reference
  jobId Int?
  job   Job?   @relation(fields: [jobId], references: [id])
}
